/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package jantar.filosofico;

import java.awt.Color;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JLabel;
import javax.swing.JSpinner;

/**
 *
 * @author aleph
 */
public class Main extends javax.swing.JFrame {

    private List<Garfo> garfos;
    private List<Filosofo> filosofos;

    private List<JLabel> garfosGraficos;
    private List<JLabel> filosofosGraficos;
    private List<Color> corFilosofos;
    private int[] qtdGarfadasFilosofos;

    /**
     * Creates new form Main
     */
    public Main() {
        initComponents();
        setLocationRelativeTo(null);  
        iniciarGarfos();
        iniciarFilosofos();
        ficaDeOlhoNoJantar();
    }

    private void iniciarGarfos() {
        this.garfosGraficos = new ArrayList();
        garfosGraficos.add(garfo0);
        garfosGraficos.add(garfo1);
        garfosGraficos.add(garfo2);
        garfosGraficos.add(garfo3);
        garfosGraficos.add(garfo4);
        this.garfos = new ArrayList();
        for (int i = 0; i < 5; i++) {
            garfos.add(new Garfo(i));
        }
        this.qtdGarfadasFilosofos = new int[5];
    }

    private void iniciarFilosofos() {
        this.filosofosGraficos = new ArrayList();
        filosofosGraficos.add(filosofo0);
        filosofosGraficos.add(filosofo1);
        filosofosGraficos.add(filosofo2);
        filosofosGraficos.add(filosofo3);
        filosofosGraficos.add(filosofo4);
        this.corFilosofos = new ArrayList();
        corFilosofos.add(Color.green);
        corFilosofos.add(Color.red);
        corFilosofos.add(Color.yellow);
        corFilosofos.add(Color.blue);
        corFilosofos.add(Color.magenta);
        this.filosofos = new ArrayList();
        for (int i = 0; i < 5; i++) {
            filosofos.add(
                    new Filosofo(i,
                            garfos.get(i),
                            garfos.get((i + 1) % 5)));
        }
//        deixaTodoMundoComFome();
        for (Filosofo filosofo : this.filosofos) {
            new Thread(filosofo).start();
        }
    }
    
    private void deixaTodoMundoComFome(){
        for (int i=0; i<garfos.size(); i++) {
            try {
                garfos.get(i).segurar(filosofos.get(i));
            } catch (Exception ex) {
                Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }

    private void ficaDeOlhoNoJantar() {
        new Thread(() -> {
            while (true) {
                for (int i = 0; i < 5; i++) {
                    // Obtem os dados do jantar
                    int idFilosofo = garfos.get(i).getDonoId();
                    int qtdGarfadas = garfos.get(i).getQtdGarfadasDono();
                    // Atualiza interface
                    Color cor;
                    if (idFilosofo != -1) {
                        // Atualiza métricas
                        this.qtdGarfadasFilosofos[idFilosofo] = qtdGarfadas;
                        this.injustica.setText(String.valueOf(calculaInjustica(qtdGarfadasFilosofos)));
                        filosofosGraficos.get(idFilosofo).setText(String.valueOf(qtdGarfadas));
                        cor = corFilosofos.get(idFilosofo);
                    } else {
                        cor = Color.white;
                    }
                    garfosGraficos.get(i).setBackground(cor);
                }
            }
        }).start();
    }

    /**
     * Calcula a justiça baseando-se na diferença entre a quantidade mínima e
     * máxima de garfadas. Quanto mais próximo de 0, mais justo.
     *
     * @return a diferença entre o menor e o maior número do vetor de inteiros
     */
    private int calculaInjustica(int[] vetor) {
        int min = vetor[0];
        int max = vetor[0];
        for (int i = 1; i < vetor.length; i++) {
            if (vetor[i] < min) {
                min = vetor[i];
            }
            if (vetor[i] > max) {
                max = vetor[i];
            }
        }
        return max - min;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        filosofo0 = new javax.swing.JLabel();
        filosofo1 = new javax.swing.JLabel();
        filosofo2 = new javax.swing.JLabel();
        filosofo3 = new javax.swing.JLabel();
        filosofo4 = new javax.swing.JLabel();
        garfo0 = new javax.swing.JLabel();
        garfo1 = new javax.swing.JLabel();
        garfo2 = new javax.swing.JLabel();
        garfo3 = new javax.swing.JLabel();
        garfo4 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        injustica = new javax.swing.JLabel();
        tempoComendo = new javax.swing.JSpinner();
        tempoPensando = new javax.swing.JSpinner();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(java.awt.Color.white);

        jPanel1.setBackground(java.awt.Color.white);

        filosofo0.setBackground(java.awt.Color.green);
        filosofo0.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jantar/filosofico/imgs/old-man.png"))); // NOI18N
        filosofo0.setText("0");
        filosofo0.setOpaque(true);

        filosofo1.setBackground(java.awt.Color.red);
        filosofo1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jantar/filosofico/imgs/old-man.png"))); // NOI18N
        filosofo1.setText("0");
        filosofo1.setOpaque(true);

        filosofo2.setBackground(java.awt.Color.yellow);
        filosofo2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jantar/filosofico/imgs/old-man.png"))); // NOI18N
        filosofo2.setText("0");
        filosofo2.setOpaque(true);

        filosofo3.setBackground(java.awt.Color.blue);
        filosofo3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jantar/filosofico/imgs/old-man.png"))); // NOI18N
        filosofo3.setText("0");
        filosofo3.setOpaque(true);

        filosofo4.setBackground(java.awt.Color.magenta);
        filosofo4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jantar/filosofico/imgs/old-man.png"))); // NOI18N
        filosofo4.setText("0");
        filosofo4.setOpaque(true);

        garfo0.setBackground(java.awt.Color.white);
        garfo0.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jantar/filosofico/imgs/fork.png"))); // NOI18N
        garfo0.setOpaque(true);

        garfo1.setBackground(java.awt.Color.white);
        garfo1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jantar/filosofico/imgs/fork.png"))); // NOI18N
        garfo1.setOpaque(true);

        garfo2.setBackground(java.awt.Color.white);
        garfo2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jantar/filosofico/imgs/fork.png"))); // NOI18N
        garfo2.setOpaque(true);

        garfo3.setBackground(java.awt.Color.white);
        garfo3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jantar/filosofico/imgs/fork.png"))); // NOI18N
        garfo3.setOpaque(true);

        garfo4.setBackground(java.awt.Color.white);
        garfo4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jantar/filosofico/imgs/fork.png"))); // NOI18N
        garfo4.setOpaque(true);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(72, 72, 72)
                .addComponent(filosofo4, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(garfo0)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(garfo1)
                .addGap(18, 18, 18)
                .addComponent(filosofo1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(72, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(garfo4)
                                .addGap(5, 5, 5))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(filosofo3, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(garfo3)
                                .addGap(4, 4, 4)
                                .addComponent(garfo2)
                                .addGap(180, 180, 180))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(filosofo2, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(116, 116, 116))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(filosofo0, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(222, 222, 222))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(filosofo0)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(37, 37, 37)
                                .addComponent(garfo1))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(garfo0))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(filosofo4)
                                .addGap(6, 6, 6))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(filosofo1)
                                .addGap(12, 12, 12)))))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(garfo4)
                            .addComponent(garfo2))
                        .addGap(24, 24, 24)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(filosofo3)
                            .addComponent(filosofo2))
                        .addGap(172, 172, 172))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addComponent(garfo3)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        filosofo0.getAccessibleContext().setAccessibleName("filosofo1");

        jPanel2.setBackground(java.awt.Color.white);

        jLabel1.setText("Injustiça");

        injustica.setText("0");

        tempoComendo.setModel(new javax.swing.SpinnerNumberModel(1, 1, null, 1));
        tempoComendo.setValue(Filosofo.TEMPO_MAXIMO_COMENDO);
        tempoComendo.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                tempoComendoStateChanged(evt);
            }
        });

        tempoPensando.setModel(new javax.swing.SpinnerNumberModel(1, 1, null, 1));
        tempoPensando.setValue(Filosofo.TEMPO_MAXIMO_PENSANDO);
        tempoPensando.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                tempoPensandoStateChanged(evt);
            }
        });

        jLabel2.setText("Tempo máximo comendo");

        jLabel3.setText("Tempo máximo pensando");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tempoComendo, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(injustica, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tempoPensando, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(tempoComendo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2))
                    .addComponent(jLabel1))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addComponent(injustica))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tempoPensando, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 378, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tempoComendoStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_tempoComendoStateChanged
        JSpinner spinner = (JSpinner) evt.getSource();
        int value = (int) spinner.getValue();
        Filosofo.TEMPO_MAXIMO_COMENDO = value;
    }//GEN-LAST:event_tempoComendoStateChanged

    private void tempoPensandoStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_tempoPensandoStateChanged
        JSpinner spinner = (JSpinner) evt.getSource();
        int value = (int) spinner.getValue();
        Filosofo.TEMPO_MAXIMO_PENSANDO = value;

    }//GEN-LAST:event_tempoPensandoStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel filosofo0;
    private javax.swing.JLabel filosofo1;
    private javax.swing.JLabel filosofo2;
    private javax.swing.JLabel filosofo3;
    private javax.swing.JLabel filosofo4;
    private javax.swing.JLabel garfo0;
    private javax.swing.JLabel garfo1;
    private javax.swing.JLabel garfo2;
    private javax.swing.JLabel garfo3;
    private javax.swing.JLabel garfo4;
    private javax.swing.JLabel injustica;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JSpinner tempoComendo;
    private javax.swing.JSpinner tempoPensando;
    // End of variables declaration//GEN-END:variables
}
